import { MigrationInterface, QueryRunner } from "typeorm";

export class InitialSchema1741675521854 implements MigrationInterface {
    name = 'InitialSchema1741675521854'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE \`users\` DROP FOREIGN KEY \`FK_user_role\``);
        await queryRunner.query(`ALTER TABLE \`resources\` DROP FOREIGN KEY \`resources_ibfk_1\``);
        await queryRunner.query(`ALTER TABLE \`reservations\` DROP FOREIGN KEY \`reservations_ibfk_1\``);
        await queryRunner.query(`ALTER TABLE \`reservations\` DROP FOREIGN KEY \`reservations_ibfk_2\``);
        await queryRunner.query(`ALTER TABLE \`reservations\` DROP FOREIGN KEY \`reservations_ibfk_3\``);
        await queryRunner.query(`ALTER TABLE \`roles_permissions\` DROP FOREIGN KEY \`FK_f25fd350775094ceb3a02c14681\``);
        await queryRunner.query(`DROP INDEX \`typeId\` ON \`resources\``);
        await queryRunner.query(`DROP INDEX \`userId\` ON \`reservations\``);
        await queryRunner.query(`DROP INDEX \`resourceId\` ON \`reservations\``);
        await queryRunner.query(`DROP INDEX \`approvedById\` ON \`reservations\``);
        await queryRunner.query(`ALTER TABLE \`permissions\` CHANGE \`scope\` \`scope\` varchar(50) NULL`);
        await queryRunner.query(`ALTER TABLE \`roles\` CHANGE \`description\` \`description\` text NULL`);
        await queryRunner.query(`ALTER TABLE \`users\` CHANGE \`phone_number\` \`phone_number\` varchar(15) NULL`);
        await queryRunner.query(`ALTER TABLE \`users\` CHANGE \`refreshTokens\` \`refreshTokens\` text NULL`);
        await queryRunner.query(`ALTER TABLE \`users\` CHANGE \`last_activity\` \`last_activity\` timestamp NULL`);
        await queryRunner.query(`ALTER TABLE \`users\` CHANGE \`directPermissions\` \`directPermissions\` text NULL`);
        await queryRunner.query(`ALTER TABLE \`users\` CHANGE \`roleId\` \`roleId\` varchar(36) NULL`);
        await queryRunner.query(`ALTER TABLE \`resource_types\` CHANGE \`is_deleted\` \`is_deleted\` tinyint NOT NULL DEFAULT 0`);
        await queryRunner.query(`ALTER TABLE \`resources\` CHANGE \`description\` \`description\` text NULL`);
        await queryRunner.query(`ALTER TABLE \`resources\` CHANGE \`status\` \`status\` enum ('Available', 'Reserved', 'Maintenance') NOT NULL DEFAULT 'Available'`);
        await queryRunner.query(`ALTER TABLE \`resources\` CHANGE \`is_deleted\` \`is_deleted\` tinyint NOT NULL DEFAULT 0`);
        await queryRunner.query(`ALTER TABLE \`reservations\` CHANGE \`status\` \`status\` enum ('Pending', 'Approved', 'Rejected', 'Cancelled') NOT NULL DEFAULT 'Pending'`);
        await queryRunner.query(`ALTER TABLE \`reservations\` CHANGE \`purpose\` \`purpose\` text NULL`);
        await queryRunner.query(`ALTER TABLE \`reservations\` CHANGE \`is_deleted\` \`is_deleted\` tinyint NOT NULL DEFAULT 0`);
        await queryRunner.query(`ALTER TABLE \`reservations\` CHANGE \`created_at\` \`created_at\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6)`);
        await queryRunner.query(`ALTER TABLE \`reservations\` CHANGE \`updated_at\` \`updated_at\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6)`);
        await queryRunner.query(`ALTER TABLE \`reservations\` CHANGE \`approvedById\` \`approvedById\` varchar(36) NULL`);
        await queryRunner.query(`ALTER TABLE \`events\` DROP FOREIGN KEY \`FK_8a92756d1f59cf7000bb84f4e44\``);
        await queryRunner.query(`ALTER TABLE \`events\` CHANGE \`description\` \`description\` text NULL`);
        await queryRunner.query(`ALTER TABLE \`events\` CHANGE \`location\` \`location\` varchar(100) NULL`);
        await queryRunner.query(`ALTER TABLE \`events\` CHANGE \`capacity\` \`capacity\` int NULL`);
        await queryRunner.query(`ALTER TABLE \`events\` CHANGE \`assignedToId\` \`assignedToId\` varchar(36) NULL`);
        await queryRunner.query(`ALTER TABLE \`courses\` CHANGE \`description\` \`description\` text NULL`);
        await queryRunner.query(`ALTER TABLE \`modules\` CHANGE \`credits\` \`credits\` int NULL`);
        await queryRunner.query(`ALTER TABLE \`classes\` DROP FOREIGN KEY \`FK_e8bc6827c71ad19f5645eeed081\``);
        await queryRunner.query(`ALTER TABLE \`classes\` CHANGE \`location\` \`location\` varchar(100) NULL`);
        await queryRunner.query(`ALTER TABLE \`classes\` CHANGE \`capacity\` \`capacity\` int NULL`);
        await queryRunner.query(`ALTER TABLE \`classes\` CHANGE \`reservedById\` \`reservedById\` varchar(36) NULL`);
        await queryRunner.query(`ALTER TABLE \`enrollments\` CHANGE \`grade\` \`grade\` varchar(10) NULL`);
        await queryRunner.query(`ALTER TABLE \`notifications\` CHANGE \`relatedEntity\` \`relatedEntity\` varchar(50) NULL`);
        await queryRunner.query(`ALTER TABLE \`groups\` CHANGE \`description\` \`description\` text NULL`);
        await queryRunner.query(`ALTER TABLE \`messages\` DROP FOREIGN KEY \`FK_438f09ab5b4bbcd27683eac2a5e\``);
        await queryRunner.query(`ALTER TABLE \`messages\` DROP FOREIGN KEY \`FK_f548818d46a1315d4e1d5e62da5\``);
        await queryRunner.query(`ALTER TABLE \`messages\` CHANGE \`groupId\` \`groupId\` int NULL`);
        await queryRunner.query(`ALTER TABLE \`messages\` CHANGE \`recipientId\` \`recipientId\` varchar(36) NULL`);
        await queryRunner.query(`ALTER TABLE \`users\` ADD CONSTRAINT \`FK_368e146b785b574f42ae9e53d5e\` FOREIGN KEY (\`roleId\`) REFERENCES \`roles\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`resources\` ADD CONSTRAINT \`FK_f76d0db311a85f30b93628c211b\` FOREIGN KEY (\`typeId\`) REFERENCES \`resource_types\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`reservations\` ADD CONSTRAINT \`FK_aa0e1cc2c4f54da32bf8282154c\` FOREIGN KEY (\`userId\`) REFERENCES \`users\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`reservations\` ADD CONSTRAINT \`FK_4bbadae8acde327d64f7c575485\` FOREIGN KEY (\`resourceId\`) REFERENCES \`resources\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`reservations\` ADD CONSTRAINT \`FK_68c5f9abea6ea7531532ad1ba9a\` FOREIGN KEY (\`approvedById\`) REFERENCES \`users\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`events\` ADD CONSTRAINT \`FK_8a92756d1f59cf7000bb84f4e44\` FOREIGN KEY (\`assignedToId\`) REFERENCES \`users\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`classes\` ADD CONSTRAINT \`FK_e8bc6827c71ad19f5645eeed081\` FOREIGN KEY (\`reservedById\`) REFERENCES \`users\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`messages\` ADD CONSTRAINT \`FK_438f09ab5b4bbcd27683eac2a5e\` FOREIGN KEY (\`groupId\`) REFERENCES \`groups\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`messages\` ADD CONSTRAINT \`FK_f548818d46a1315d4e1d5e62da5\` FOREIGN KEY (\`recipientId\`) REFERENCES \`users\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`roles_permissions\` ADD CONSTRAINT \`FK_f25fd350775094ceb3a02c14681\` FOREIGN KEY (\`permissionsId\`) REFERENCES \`permissions\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE \`roles_permissions\` DROP FOREIGN KEY \`FK_f25fd350775094ceb3a02c14681\``);
        await queryRunner.query(`ALTER TABLE \`messages\` DROP FOREIGN KEY \`FK_f548818d46a1315d4e1d5e62da5\``);
        await queryRunner.query(`ALTER TABLE \`messages\` DROP FOREIGN KEY \`FK_438f09ab5b4bbcd27683eac2a5e\``);
        await queryRunner.query(`ALTER TABLE \`classes\` DROP FOREIGN KEY \`FK_e8bc6827c71ad19f5645eeed081\``);
        await queryRunner.query(`ALTER TABLE \`events\` DROP FOREIGN KEY \`FK_8a92756d1f59cf7000bb84f4e44\``);
        await queryRunner.query(`ALTER TABLE \`reservations\` DROP FOREIGN KEY \`FK_68c5f9abea6ea7531532ad1ba9a\``);
        await queryRunner.query(`ALTER TABLE \`reservations\` DROP FOREIGN KEY \`FK_4bbadae8acde327d64f7c575485\``);
        await queryRunner.query(`ALTER TABLE \`reservations\` DROP FOREIGN KEY \`FK_aa0e1cc2c4f54da32bf8282154c\``);
        await queryRunner.query(`ALTER TABLE \`resources\` DROP FOREIGN KEY \`FK_f76d0db311a85f30b93628c211b\``);
        await queryRunner.query(`ALTER TABLE \`users\` DROP FOREIGN KEY \`FK_368e146b785b574f42ae9e53d5e\``);
        await queryRunner.query(`ALTER TABLE \`messages\` CHANGE \`recipientId\` \`recipientId\` varchar(36) NULL DEFAULT 'NULL'`);
        await queryRunner.query(`ALTER TABLE \`messages\` CHANGE \`groupId\` \`groupId\` int NULL DEFAULT 'NULL'`);
        await queryRunner.query(`ALTER TABLE \`messages\` ADD CONSTRAINT \`FK_f548818d46a1315d4e1d5e62da5\` FOREIGN KEY (\`recipientId\`) REFERENCES \`users\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`messages\` ADD CONSTRAINT \`FK_438f09ab5b4bbcd27683eac2a5e\` FOREIGN KEY (\`groupId\`) REFERENCES \`groups\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`groups\` CHANGE \`description\` \`description\` text NULL DEFAULT 'NULL'`);
        await queryRunner.query(`ALTER TABLE \`notifications\` CHANGE \`relatedEntity\` \`relatedEntity\` varchar(50) NULL DEFAULT 'NULL'`);
        await queryRunner.query(`ALTER TABLE \`enrollments\` CHANGE \`grade\` \`grade\` varchar(10) NULL DEFAULT 'NULL'`);
        await queryRunner.query(`ALTER TABLE \`classes\` CHANGE \`reservedById\` \`reservedById\` varchar(36) NULL DEFAULT 'NULL'`);
        await queryRunner.query(`ALTER TABLE \`classes\` CHANGE \`capacity\` \`capacity\` int NULL DEFAULT 'NULL'`);
        await queryRunner.query(`ALTER TABLE \`classes\` CHANGE \`location\` \`location\` varchar(100) NULL DEFAULT 'NULL'`);
        await queryRunner.query(`ALTER TABLE \`classes\` ADD CONSTRAINT \`FK_e8bc6827c71ad19f5645eeed081\` FOREIGN KEY (\`reservedById\`) REFERENCES \`users\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`modules\` CHANGE \`credits\` \`credits\` int NULL DEFAULT 'NULL'`);
        await queryRunner.query(`ALTER TABLE \`courses\` CHANGE \`description\` \`description\` text NULL DEFAULT 'NULL'`);
        await queryRunner.query(`ALTER TABLE \`events\` CHANGE \`assignedToId\` \`assignedToId\` varchar(36) NULL DEFAULT 'NULL'`);
        await queryRunner.query(`ALTER TABLE \`events\` CHANGE \`capacity\` \`capacity\` int NULL DEFAULT 'NULL'`);
        await queryRunner.query(`ALTER TABLE \`events\` CHANGE \`location\` \`location\` varchar(100) NULL DEFAULT 'NULL'`);
        await queryRunner.query(`ALTER TABLE \`events\` CHANGE \`description\` \`description\` text NULL DEFAULT 'NULL'`);
        await queryRunner.query(`ALTER TABLE \`events\` ADD CONSTRAINT \`FK_8a92756d1f59cf7000bb84f4e44\` FOREIGN KEY (\`assignedToId\`) REFERENCES \`users\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`reservations\` CHANGE \`approvedById\` \`approvedById\` varchar(36) NULL DEFAULT 'NULL'`);
        await queryRunner.query(`ALTER TABLE \`reservations\` CHANGE \`updated_at\` \`updated_at\` datetime(0) NULL DEFAULT CURRENT_TIMESTAMP() ON UPDATE CURRENT_TIMESTAMP()`);
        await queryRunner.query(`ALTER TABLE \`reservations\` CHANGE \`created_at\` \`created_at\` datetime(0) NULL DEFAULT CURRENT_TIMESTAMP()`);
        await queryRunner.query(`ALTER TABLE \`reservations\` CHANGE \`is_deleted\` \`is_deleted\` tinyint(1) NULL DEFAULT '0'`);
        await queryRunner.query(`ALTER TABLE \`reservations\` CHANGE \`purpose\` \`purpose\` text NULL DEFAULT 'NULL'`);
        await queryRunner.query(`ALTER TABLE \`reservations\` CHANGE \`status\` \`status\` enum ('Pending', 'Approved', 'Rejected', 'Cancelled') NULL DEFAULT ''Pending''`);
        await queryRunner.query(`ALTER TABLE \`resources\` CHANGE \`is_deleted\` \`is_deleted\` tinyint(1) NULL DEFAULT '0'`);
        await queryRunner.query(`ALTER TABLE \`resources\` CHANGE \`status\` \`status\` enum ('Available', 'Reserved', 'Maintenance') NULL DEFAULT ''Available''`);
        await queryRunner.query(`ALTER TABLE \`resources\` CHANGE \`description\` \`description\` text NULL DEFAULT 'NULL'`);
        await queryRunner.query(`ALTER TABLE \`resource_types\` CHANGE \`is_deleted\` \`is_deleted\` tinyint(1) NULL DEFAULT '0'`);
        await queryRunner.query(`ALTER TABLE \`users\` CHANGE \`roleId\` \`roleId\` varchar(36) NULL DEFAULT 'NULL'`);
        await queryRunner.query(`ALTER TABLE \`users\` CHANGE \`directPermissions\` \`directPermissions\` text NULL DEFAULT 'NULL'`);
        await queryRunner.query(`ALTER TABLE \`users\` CHANGE \`last_activity\` \`last_activity\` timestamp NULL DEFAULT 'NULL'`);
        await queryRunner.query(`ALTER TABLE \`users\` CHANGE \`refreshTokens\` \`refreshTokens\` text NULL DEFAULT 'NULL'`);
        await queryRunner.query(`ALTER TABLE \`users\` CHANGE \`phone_number\` \`phone_number\` varchar(15) NULL DEFAULT 'NULL'`);
        await queryRunner.query(`ALTER TABLE \`roles\` CHANGE \`description\` \`description\` text NULL DEFAULT 'NULL'`);
        await queryRunner.query(`ALTER TABLE \`permissions\` CHANGE \`scope\` \`scope\` varchar(50) NULL DEFAULT 'NULL'`);
        await queryRunner.query(`CREATE INDEX \`approvedById\` ON \`reservations\` (\`approvedById\`)`);
        await queryRunner.query(`CREATE INDEX \`resourceId\` ON \`reservations\` (\`resourceId\`)`);
        await queryRunner.query(`CREATE INDEX \`userId\` ON \`reservations\` (\`userId\`)`);
        await queryRunner.query(`CREATE INDEX \`typeId\` ON \`resources\` (\`typeId\`)`);
        await queryRunner.query(`ALTER TABLE \`roles_permissions\` ADD CONSTRAINT \`FK_f25fd350775094ceb3a02c14681\` FOREIGN KEY (\`permissionsId\`) REFERENCES \`permissions\`(\`id\`) ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE \`reservations\` ADD CONSTRAINT \`reservations_ibfk_3\` FOREIGN KEY (\`approvedById\`) REFERENCES \`users\`(\`id\`) ON DELETE RESTRICT ON UPDATE RESTRICT`);
        await queryRunner.query(`ALTER TABLE \`reservations\` ADD CONSTRAINT \`reservations_ibfk_2\` FOREIGN KEY (\`resourceId\`) REFERENCES \`resources\`(\`id\`) ON DELETE RESTRICT ON UPDATE RESTRICT`);
        await queryRunner.query(`ALTER TABLE \`reservations\` ADD CONSTRAINT \`reservations_ibfk_1\` FOREIGN KEY (\`userId\`) REFERENCES \`users\`(\`id\`) ON DELETE RESTRICT ON UPDATE RESTRICT`);
        await queryRunner.query(`ALTER TABLE \`resources\` ADD CONSTRAINT \`resources_ibfk_1\` FOREIGN KEY (\`typeId\`) REFERENCES \`resource_types\`(\`id\`) ON DELETE RESTRICT ON UPDATE RESTRICT`);
        await queryRunner.query(`ALTER TABLE \`users\` ADD CONSTRAINT \`FK_user_role\` FOREIGN KEY (\`roleId\`) REFERENCES \`roles\`(\`id\`) ON DELETE SET NULL ON UPDATE CASCADE`);
    }

}
